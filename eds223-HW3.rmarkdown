---
output: html_document
editor_options: 
  chunk_output_type: console
---


### Import Data

First, we load the libraries and data.



```{r}
#| code-fold: true
#| code-summary: "Show the code"
library(sf)
library(here)
library(tmap)
library(tidyverse)
library(testthat)
library(kableExtra)
library(patchwork)
library(terra) # raster handling
library(spData) # spatial data
library(spDataLarge) # spatial data
library(geodata) # spatial data
```



Up first are the night lights raster.



```{r}
#| code-fold: true
#| code-summary: "Show the code"

feb07v05 <- rast(here::here("data", "VNP46A1",
                            "VNP46A1.A2021038.h08v05.001.2021039064328.tif"))
feb07v06 <- rast(here::here("data", "VNP46A1",
                            "VNP46A1.A2021038.h08v06.001.2021039064329.tif"))
feb16v05 <- rast(here::here("data", "VNP46A1",
                            "VNP46A1.A2021047.h08v05.001.2021048091106.tif"))
feb16v06 <- rast(here::here("data", "VNP46A1",
                            "VNP46A1.A2021047.h08v06.001.2021048091105.tif"))
```



Then, we check if the datasets have the same coordinate systems.



```{r}
# check if CRS of each dataset are equal
st_crs(feb07v05) == st_crs(feb07v06)
st_crs(feb16v05) == st_crs(feb16v06)
```



Combine data sets.



```{r}
feb07 <- merge(feb07v05, feb07v06)
feb16 <- merge(feb16v05, feb16v06)
```



We can check if the combined datasets have the same coordinate systems.



```{r}
st_crs(feb07) == st_crs(feb16)
```

```{r}
# check if coordinate reference systems match
if(st_crs(feb07) == st_crs(feb16)) {
  print("Coordinate reference systems match")
} else{
  warning("Updating coordinate reference systems to match")
  # transform data to match
  boundary <- st_transform(feb07, st_crs(feb16))
}
```

```{r}
tm_shape(feb07) +
  tm_raster(title = "Feb 7th") 
tm_shape(feb16) +
  tm_raster(title = "Feb 16th") 
```

